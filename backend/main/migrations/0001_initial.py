# Generated by Django 4.2.20 on 2025-03-30 11:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
            ],
            options={
                'verbose_name': 'Пост',
                'verbose_name_plural': 'Посты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=300, verbose_name='ФИО')),
                ('biography', models.TextField(verbose_name='Биография')),
                ('github', models.URLField(blank=True, verbose_name='GitHub')),
                ('telegram', models.CharField(blank=True, max_length=50, verbose_name='Telegram')),
                ('avatar', models.ImageField(blank=True, upload_to='developers/avatars/', verbose_name='Аватар')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата вступления')),
                ('is_stock', models.BooleanField(default=False, verbose_name='Показать?')),
            ],
            options={
                'verbose_name': 'Разработчик',
                'verbose_name_plural': 'Разработчики',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('link', models.CharField(max_length=1000, verbose_name='Ссылка')),
                ('description', models.TextField()),
                ('repository_url', models.URLField(blank=True, verbose_name='Репозиторий')),
                ('demo_url', models.URLField(blank=True, verbose_name='Демо')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата завершения')),
                ('is_stock', models.BooleanField(default=False, verbose_name='Показать?')),
                ('slug', models.SlugField()),
                ('developers', models.ManyToManyField(to='main.developer', verbose_name='Разработчики')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name': 'Умение',
                'verbose_name_plural': 'Умения',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(unique=True)),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Цвет (HEX)')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100, verbose_name='Имя клиента')),
                ('client_role', models.CharField(blank=True, max_length=100, verbose_name='Должность/компания')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('rating', models.PositiveSmallIntegerField(default=5, verbose_name='Оценка (1-5)')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрено')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Иконка (Font Awesome класс)')),
                ('projects', models.ManyToManyField(blank=True, related_name='technologies', to='main.project')),
            ],
            options={
                'verbose_name': 'Технология',
                'verbose_name_plural': 'Технологии',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=100, verbose_name='Срок выполнения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна?')),
                ('price', models.CharField(max_length=100, verbose_name='Цена')),
                ('developers', models.ManyToManyField(blank=True, to='main.developer', verbose_name='Ответственные')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='ProjectStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Этап')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Завершён')),
                ('deadline', models.DateField(blank=True, null=True, verbose_name='Дедлайн')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='main.project')),
            ],
            options={
                'verbose_name': 'Этап проекта',
                'verbose_name_plural': 'Этапы проекта',
            },
        ),
        migrations.CreateModel(
            name='ProjectImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='project/image/%Y/%m/%d/')),
                ('is_stock', models.BooleanField(default=False, verbose_name='Показать?')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Описание изображения')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.project')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='roles_needed',
            field=models.ManyToManyField(blank=True, to='main.role', verbose_name='Требуемые роли'),
        ),
        migrations.AddField(
            model_name='project',
            name='skills',
            field=models.ManyToManyField(blank=True, to='main.skills', verbose_name='Необходимые навыки'),
        ),
        migrations.AddField(
            model_name='developer',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.role'),
        ),
        migrations.AddField(
            model_name='developer',
            name='skills',
            field=models.ManyToManyField(blank=True, to='main.skills', verbose_name='Навыки'),
        ),
        migrations.AddField(
            model_name='developer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Разработчик'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Имя автора')),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name='Email автора')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main.blogpost')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.developer', verbose_name='Автор'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=models.ManyToManyField(blank=True, to='main.tag', verbose_name='Теги'),
        ),
    ]
